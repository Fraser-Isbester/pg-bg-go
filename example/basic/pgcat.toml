#
# PgCat config example.
#

#
# General pooler settings
[general]
host = "0.0.0.0"
port = 6432

# Whether to enable prometheus exporter or not.
enable_prometheus_exporter = false

# Port at which prometheus exporter listens on.
prometheus_exporter_port = 9930

# How long to wait before aborting a server connection (ms).
connect_timeout = 5000

# How much time to give `SELECT 1` health check query to return with a result (ms).
healthcheck_timeout = 1000

# How long to keep connection available for immediate re-use, without running a healthcheck query on it
healthcheck_delay = 30000

# How much time to give clients during shutdown before forcibly killing client connections (ms).
shutdown_timeout = 60000

# For how long to ban a server if it fails a health check (seconds).
ban_time = 30 # seconds

# If we should log client connections
log_client_connections = true

# If we should log client disconnections
log_client_disconnections = true

# Reload config automatically if it changes.
autoreload = true

# TLS
# tls_certificate = "server.cert"
# tls_private_key = "server.key"

# Credentials to access the virtual administrative database (pgbouncer or pgcat)
# Connecting to that database allows running commands like `SHOW POOLS`, `SHOW DATABASES`, etc..
admin_username = "postgres"
admin_password = "postgres"

# Postgres ReadWrite
[pools.postgres]
# Pool mode (see PgBouncer docs for more).
pool_mode = "transaction"
default_role = "any"

query_parser_enabled = false
primary_reads_enabled = true
sharding_function = "pg_bigint_hash"

# Credentials for users that may connect to this cluster
[pools.postgres.users.0]
username = "postgres"
password = "postgres"
pool_size = 5

# Maximum query duration. Dangerous, but protects against DBs that died in a non-obvious way.
statement_timeout = 0

# Postgres ReadWrite
[pools.postgres.shards.0]
servers = [
    [ "blue_db", 5432, "primary" ]
]
database = "postgres"

# Postgre Read Only
[pools.postgres_ro]
pool_mode = "transaction"
default_role = "any"

query_parser_enabled = false
primary_reads_enabled = true
sharding_function = "pg_bigint_hash"

# Credentials for users that may connect to this cluster
[pools.postgres_ro.users.0]
username = "postgres"
password = "postgres"
pool_size = 5

# Maximum query duration. Dangerous, but protects against DBs that died in a non-obvious way.
statement_timeout = 0

# Postgres ReadWrite
[pools.postgres_ro.shards.0]
servers = [
    [ "blue_db", 5432, "primary" ]
]
database = "postgres"